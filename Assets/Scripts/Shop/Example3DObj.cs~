using UnityEngine;
using System.Collections;

public class Example3DObjShop : MonoBehaviour {

	
	public SwipeControl swipeCtrl;
	public Transform[] obj = new Transform[0];

	//public GameObject[] arrayOfObj;
	
	
	public float minXPos = 0f; //min x position of the camera
	public float maxXPos = 115f; //max x position of the camera
	private float xDist; //distance between camMinXPos and camMaxXPos
	private float xDistFactor; // = 1/camXDist

	private float swipeSmoothFactor = 1.0f; // 1/swipeCtrl.maxValue

	private float rememberYPos;
	
	// Use this for initialization
	void Start () {
	
		
	xDist = maxXPos - minXPos;
	xDistFactor = 1.0f / xDist;

	if(!swipeCtrl) swipeCtrl = gameObject.AddComponent<SwipeControl>();

	swipeCtrl.skipAutoSetup = true; //skip auto-setup, we'll call Setup() manually once we're done changing stuff
	swipeCtrl.clickEdgeToSwitch = false; //only swiping will be possible
	swipeCtrl.SetMouseRect(new Rect(0, 0, Screen.width, Screen.height)); //entire screen
	swipeCtrl.maxValue = obj.Length - 1; //max value
	

	//Default
	//swipeCtrl.currentValue = swipeCtrl.maxValue; //current value set to max, so it starts from the end
	//swipeCtrl.startValue = Mathf.RoundToInt(swipeCtrl.maxValue * 0.5f); //when Setup() is called it will animate from the end to the middle
	
	swipeCtrl.currentValue = 0; //current value set to max, so it starts from the end
	swipeCtrl.startValue = 0; //when Setup() is called it will animate from the end to the middle

		
		
	//swipeCtrl.partWidth = Screen.width  / swipeCtrl.maxValue; //how many pixels do you have to swipe to change the value by one? in this case we make it dependent on the screen-width and the maxValue, so swiping from one edge of the screen to the other will scroll through all values.

	swipeCtrl.partWidth = Screen.height  / swipeCtrl.maxValue;
		
	swipeCtrl.Setup();

	swipeSmoothFactor = 1.0f/swipeCtrl.maxValue; //divisions are expensive, so we'll only do this once in start
	
	rememberYPos = obj[0].position.y;
		
	}
	
	// Update is called once per frame
	void Update () {
	
		for(int i = 0; i < obj.Length; i++) {
			
			obj[i].position = new Vector3(1.0f * (1 - Mathf.Clamp(Mathf.Abs(i - swipeCtrl.smoothValue), 0.0f, 1.0f)),minXPos + i * (xDist * swipeSmoothFactor) - swipeCtrl.smoothValue*swipeSmoothFactor*xDist , obj[i].position.z);
		//obj[i].position.x = minXPos + i * (xDist * swipeSmoothFactor) - swipeCtrl.smoothValue*swipeSmoothFactor*xDist;

		//obj[i].position.y = 1.0 * (1 - Mathf.Clamp(Mathf.Abs(i - swipeCtrl.smoothValue), 0.0, 1.0)); //move selected one up a little
		
		/*
		obj[swipeCtrl.currentValue].renderer.material.color = new Color(obj[swipeCtrl.currentValue].renderer.material.color.r, obj[swipeCtrl.currentValue].renderer.material.color.g,
																			obj[swipeCtrl.currentValue].renderer.material.color.b, 0.5f);
		*/	
			
		}
			
		/*
		GUI.color = new Color(1f, 1f, 1f, -offset);
		if(GUI.color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) - 1 >= 0 && Mathf.Round(swipeCtrl.smoothValue) - 1 < img.Length) {
			GUI.DrawTexture(new Rect(mainPos - imgRect.width, imgRect.y, imgRect.width, imgRect.height), img[(int) Mathf.Round(swipeCtrl.smoothValue) - 1]);
		}
		GUI.color = new Color(1f, 1f, 1f, offset);
		if(GUI.color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) + 1 < img.Length && Mathf.Round(swipeCtrl.smoothValue) + 1 >= 0) {
			GUI.DrawTexture(new Rect(mainPos + imgRect.width, imgRect.y, imgRect.width, imgRect.height), img[(int) Mathf.Round(swipeCtrl.smoothValue) + 1]);
		}
		GUI.color = new Color(1f, 1f, 1f, 1f);	
		*/
			
		
	
	// IMAGES
		
		
		/*
		Color color;
		
		float offset = swipeCtrl.smoothValue - Mathf.Round(swipeCtrl.smoothValue);
		
			
		//float mainPos = obj[swipeCtrl.currentValue].transform.position.x - (offset * obj[swipeCtrl.currentValue].transform.localScale.x);
		if(Mathf.Round(swipeCtrl.smoothValue) >= 0 && Mathf.Round(swipeCtrl.smoothValue) < obj.Length) {
			
			//obj[swipeCtrl.currentValue].renderer.material.color.r
			obj[swipeCtrl.currentValue].renderer.material.color = new Color(obj[swipeCtrl.currentValue].renderer.material.color.r, obj[swipeCtrl.currentValue].renderer.material.color.g,
																			obj[swipeCtrl.currentValue].renderer.material.color.b, 1f - Mathf.Abs(offset));
		}
		
		
		
		
		color = new Color(1f, 1f, 1f, -offset);
		if(color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) - 1 >= 0 && Mathf.Round(swipeCtrl.smoothValue) - 1 < obj.Length - 1) {
			
			obj[swipeCtrl.currentValue - 1].renderer.material.color = new Color(obj[swipeCtrl.currentValue - 1].renderer.material.color.r, obj[swipeCtrl.currentValue - 1].renderer.material.color.g,
																			obj[swipeCtrl.currentValue - 1].renderer.material.color.b, 1f);	
		}
		
		
		color = new Color(1f, 1f, 1f, offset);
		if(GUI.color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) + 1 >= 0 && Mathf.Round(swipeCtrl.smoothValue) + 1 >= 0) {
			
			obj[swipeCtrl.currentValue + 1].renderer.material.color = new Color(obj[swipeCtrl.currentValue + 1].renderer.material.color.r ,obj[swipeCtrl.currentValue + 1].renderer.material.color.g,
																			obj[swipeCtrl.currentValue + 1].renderer.material.color.b, 1f);
		
		}
		
		*/
		
		
		/*
		// IMAGES
		float offset = swipeCtrl.smoothValue - Mathf.Round(swipeCtrl.smoothValue);
		float mainPos = imgRect.x - (offset * imgRect.width);
		if(Mathf.Round(swipeCtrl.smoothValue) >= 0 && Mathf.Round(swipeCtrl.smoothValue) < img.Length) {
			GUI.color = new Color(1f, 1f, 1f, 1f - Mathf.Abs(offset));
			GUI.DrawTexture(new Rect(mainPos, imgRect.y, imgRect.width, imgRect.height), img[(int) Mathf.Round(swipeCtrl.smoothValue)]);
		}
		GUI.color = new Color(1f, 1f, 1f, -offset);
		if(GUI.color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) - 1 >= 0 && Mathf.Round(swipeCtrl.smoothValue) - 1 < img.Length) {
			GUI.DrawTexture(new Rect(mainPos - imgRect.width, imgRect.y, imgRect.width, imgRect.height), img[(int) Mathf.Round(swipeCtrl.smoothValue) - 1]);
		}
		GUI.color = new Color(1f, 1f, 1f, offset);
		if(GUI.color.a > 0.0f && Mathf.Round(swipeCtrl.smoothValue) + 1 < img.Length && Mathf.Round(swipeCtrl.smoothValue) + 1 >= 0) {
			GUI.DrawTexture(new Rect(mainPos + imgRect.width, imgRect.y, imgRect.width, imgRect.height), img[(int) Mathf.Round(swipeCtrl.smoothValue) + 1]);
		}
		GUI.color = new Color(1f, 1f, 1f, 1f);
		
				
		
		}
		*/
	
}
	
}
	
